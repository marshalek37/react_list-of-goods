{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabet","setState","ALPHABET","sortLength","LENGTH","sortReset","sortReversed","this","list","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,WACb,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,WAAa,WACX,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,UAAY,WACV,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,EAyBES,aAAe,WACb,EAAKL,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAhEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAiBzB,OAdIX,IAAaL,EAASS,SACxBQ,EAAaC,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAE/Bf,IAAaL,EAASW,QAC/BM,EAAaC,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAIvClB,GACFa,EAAaM,UAGRN,EA0CQO,CAAkBvB,EAAiBa,KAAKX,OAErD,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYtB,IAAaL,EAASS,WAEtCmB,QAASd,KAAKP,aAPhB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYtB,IAAaL,EAASW,SAEtCiB,QAASd,KAAKJ,WAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAavB,IAEjBwB,QAASd,KAAKD,aAPhB,sBAYER,GAAYD,IACZ,wBACEsB,KAAK,SACLD,UAAU,mBACVG,QAASd,KAAKF,UAHhB,sBAUJ,6BACE,6BACGG,EAAKc,KAAI,SAAAC,GAAI,OACZ,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBA1FrB,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45883077.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Component } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort(\n      (goodA, goodB) => goodA.localeCompare(goodB),\n    );\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort(\n      (goodA, goodB) => goodA.length - goodB.length,\n    );\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  sortReversed = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const list = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.sortReversed}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={this.sortReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {list.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}